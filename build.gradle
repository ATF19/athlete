plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.atef'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	mavenLocal()
	mavenCentral()
}

var jacksonVersion = findProperty("jackson.version")
var junitVersion = findProperty("junit.version")
var testContainersVersion = findProperty("testcontainers.version")
var lombokVersion = findProperty("lombok.version")

dependencies {
	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-log4j2')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
	implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion")
	implementation("org.postgresql:postgresql:42.1.4")
	implementation("com.google.guava:guava:31.0.1-jre")
	compileOnly("org.projectlombok:lombok:$lombokVersion")
	annotationProcessor("org.projectlombok:lombok:$lombokVersion")

	testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
	testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.mockito:mockito-core:2.1.0")
	testImplementation("org.assertj:assertj-core:3.6.1")
	testImplementation("org.testcontainers:testcontainers:$testContainersVersion")
	testImplementation("org.testcontainers:junit-jupiter:$testContainersVersion")
	testImplementation("org.testcontainers:postgresql:$testContainersVersion")
}

test {
	useJUnitPlatform() {
		includeTags 'UnitTest'
		excludeTags 'IntegrationTest'
	}
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		includeTags 'IntegrationTest'
		excludeTags 'UnitTest'
	}
}

task allTest(type: Test) {
	useJUnitPlatform()
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude group: 'junit', module: 'junit'
	}
}